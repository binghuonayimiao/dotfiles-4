# ============================================================================= #
#  ➜ ➜ ➜ ZSH
# ============================================================================= #
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
for load in $HOME/.dotfiles/zsh/config/*.zsh; do
    if [ -r $load ]; then
        source $load
    fi
done
unset load
# Interactive/verbose commands.
alias mv='mv -i'
for c in cp rm chmod chown rename; do
  alias $c="$c -v"
done
# ============================================================================= #
#  ➜ ➜ ➜ CONFIGS
# ============================================================================= #
export ZPLUG_HOME="${XDG_CONFIG_HOME}/zplug"
[ ! -d "$ZPLUG_HOME" ] && mkdir -p "$ZPLUG_HOME"
[ ! -f "$ZPLUG_HOME/init.zsh" ] && git clone https://github.com/zplug/zplug "$ZPLUG_HOME"
source "${ZPLUG_HOME}/init.zsh"
## Let zplug manage itself like other packages
zplug 'zplug/zplug', hook-build:'zplug --self-manage'
# Oh-My-Zsh core
zplug "lib/*", from:oh-my-zsh
# ============================================================================= #
#  ➜ ➜ ➜ OH-MY-ZSH
# ============================================================================= #
zplug "plugins/history-substring-search", from:oh-my-zsh
zplug "plugins/git", from:oh-my-zsh
zplug "plugins/npm", from:oh-my-zsh
zplug "plugins/yarn", from:oh-my-zsh
zplug "plugins/nvm", from:oh-my-zsh
zplug "plugins/python", from:oh-my-zsh
zplug "plugins/pyenv", from:oh-my-zsh
zplug "plugins/pip", from:oh-my-zsh
zplug "plugins/rvm", from:oh-my-zsh
zplug "plugins/rsync", from:oh-my-zsh
zplug "plugins/vscode", from:oh-my-zsh
zplug "plugins/golang", from:oh-my-zsh
zplug "plugins/virtualenv", from:oh-my-zsh
zplug "plugins/virtualenvwrapper", from:oh-my-zsh
zplug "plugins/copydir", from:oh-my-zsh
zplug "plugins/copyfile", from:oh-my-zsh
zplug "plugins/systemd", from:oh-my-zsh
zplug "plugins/docker", from:oh-my-zsh
zplug "plugins/docker-machine", from:oh-my-zsh
zplug "plugins/docker-compose", from:oh-my-zsh
zplug "plugins/colorize", from:oh-my-zsh
zplug "plugins/taskwarrior", from:oh-my-zsh
zplug "plugins/sudo", from:oh-my-zsh
zplug "plugins/extract", from:oh-my-zsh
zplug "plugins/completion", from:oh-my-zsh
zplug "plugins/ssh-agent", from:oh-my-zsh
zplug "plugins/gpg-agent", from:oh-my-zsh
# ============================================================================= #
#  ➜ ➜ ➜ GIST
# ============================================================================= #
#zplug "ss-o/f78cf2f331ed83d158c1a70d613da1fa", \
#    from:gist, \
#    as:command, \
#    use:progbar
# ============================================================================= #
#  ➜ ➜ ➜ ZPLUG EXTRAS
# ============================================================================= #
#zplug "wuotr/zsh-plugin-vscode"
zplug "zsh-users/zsh-autosuggestions"
#zplug "marlonrichert/zsh-autocomplete"
#zplug "zpm-zsh/ls" # ls alias (ls colors)
#zplug "desyncr/auto-ls"
zplug "lukechilds/zsh-nvm"
zplug "mattberther/zsh-pyenv"
zplug "MichaelAquilina/zsh-you-should-use"
zplug "unixorn/git-extra-commands"
zplug "zdharma/fast-syntax-highlighting", defer:2
zplug "hlissner/zsh-autopair", defer:2
zplug "zsh-users/zsh-completions", defer:2
#zplug "lukechilds/zsh-better-npm-completion", defer:2
# ============================================================================= #
#  ➜ ➜ ➜ LOCAL
# ============================================================================= #
zplug "$HOME/$DOTFILES/zsh/plugins", from:local
# ============================================================================= #
#  ➜ ➜ ➜ PROFILES
# ============================================================================= #
if [[ "root" == "$USER" ]]; then
zplug "themes/robbyrussell", from:oh-my-zsh, as:theme
elif [[ "sall" == "$USER" ]]; then
zplug "romkatv/powerlevel10k", as:theme, depth:1
else
zplug "$HOME/$DOTFILES/zsh/themes", from:local, as:theme, use:ss-o.zsh-theme
fi
#zplug "denysdovhan/spaceship-prompt", use:spaceship.zsh, from:github, as:theme
# ============================================================================= #
#  ➜ ➜ ➜ INSTALL ZPLUG & LOAD
# ============================================================================= #
if ! zplug check --verbose; then
    zplug install
fi
zplug load
# ============================================================================= #
#  ➜ ➜ ➜ LOCAL CONFIGS
# ============================================================================= #
[ -f ~/.localrc ] && source ~/.localrc ## Load local environment variables
[ -f ~/.config/fzf/key-bindings.zsh ] && source ~/.config/fzf/key-bindings.zsh
[ -f ~/.config/fzf/completion.zsh ] && source ~/.config/fzf/completion.zsh
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
if [[ "sall" == "$USER" ]]; then
#source ~/.dotfiles/zsh/config/p10k/p10k-lean.zsh
#source ~/.dotfiles/zsh/config/p10k/p10k-classic.zsh
#source ~/.dotfiles/zsh/config/p10k/p10k-rainbow.zsh
#source ~/.dotfiles/zsh/config/p10k/p10k-lean-8colors.zsh
#source ~/.dotfiles/zsh/config/p10k/p10k-robbyrussell.zsh
source ~/.dotfiles/zsh/config/p10k/p10k-robby-by-sall.zsh
fi

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"
#        >> for zsh:
        source /usr/share/doc/find-the-command/ftc.zsh
#        >> You can also append 'su' option to use su instead of sudo
#        >> for root access, 'noprompt' to disable installation
#        >> prompt at all, or 'quiet' to decrease verbosity, e.g.:
        source /usr/share/doc/find-the-command/ftc.zsh noprompt quiet
#       >> Homebrew
eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
